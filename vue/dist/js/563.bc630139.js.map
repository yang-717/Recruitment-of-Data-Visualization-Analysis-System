{"version":3,"file":"js/563.bc630139.js","mappings":"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","sources":["webpack://vue/./src/views/manager/SalaryAnalysis.vue","webpack://vue/src/views/manager/SalaryAnalysis.vue","webpack://vue/./src/views/manager/SalaryAnalysis.vue?9ba3","webpack://vue/./src/views/manager/SalaryAnalysis.vue?8952"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"24px\",\"font-weight\":\"bold\",\"margin-bottom\":\"10px\",\"color\":\"#2c334c\"}},[_vm._v(\"薪资分析\")]),_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"450px\",\"flex\":\"1\"},attrs:{\"id\":\"bar\"}})]),_c('div',{staticStyle:{\"margin-top\":\"10px\",\"display\":\"flex\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"500px\",\"flex\":\"1\"},attrs:{\"id\":\"pie\"}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n\n    <div style=\"font-size: 24px; font-weight: bold; margin-bottom: 10px; color: #2c334c\" class=\"card\">薪资分析</div>\n      <div style=\"display: flex\">\n        <div id=\"bar\" style=\"height: 450px; flex: 1\" class=\"card\"></div>\n      </div>\n      <div style=\"margin-top: 10px; display:flex\">\n        <div id=\"pie\" style=\"height: 500px; flex: 1\" class=\"card\"></div>\n     </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'SalaryAnalysis',\n  data() {\n    return {\n\n    }\n  },\n  created() {\n    this.getIndustrySalaryCategoryCount();\n    this.getIndustryAverageSalary();\n  },\n  methods:{\n    // 薪资区间柱状图\n    getIndustrySalaryCategoryCount() {\n      this.$request.get('/jobData/industrySalaryCategoryCount').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n\n          const rawData = res.data;\n\n          // 设定薪资区间顺序（手动排序）\n          const salaryCategories = ['0-5000', '5000-7000', '7000-10000', '10000-20000', '200000以上'];\n\n          // 构建行业 -> { 薪资区间: count } 的 map\n          const industryMap = {};\n          rawData.forEach(item => {\n            if (!industryMap[item.industry]) {\n              industryMap[item.industry] = {};\n            }\n            industryMap[item.industry][item.salaryCategory] = item.count;\n          });\n\n          // 构建 series 数据\n          const series = Object.keys(industryMap).map(industry => {\n            return {\n              name: industry,\n              type: 'bar',\n              data: salaryCategories.map(cat => industryMap[industry][cat] || 0)\n            };\n          });\n\n          // 构建 option\n          const option = {\n            title: {\n              text: '行业薪资分布对比图'\n            },\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: Object.keys(industryMap)\n            },\n            toolbox: {\n              show: true,\n              feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n              }\n            },\n            xAxis: {\n              type: 'category',\n              data: salaryCategories\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: series\n          };\n\n          myChart.setOption(option);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    getIndustryAverageSalary() {\n      this.$request.get('/jobData/industryAverageSalary').then(res => {\n        if (res.code === '200') {\n          const salaryData = res.data;\n\n          // 动态构建 ECharts 配置\n          const colors = [\n            '#FF9999', '#FFB03F', '#3DBA2D', '#2BA6FE', '#9B59B6', '#F39C12', '#2ECC71'\n          ];\n          const borderColors = colors.map(c =>\n              c.replace(')', ', 0.4)').replace('rgb', 'rgba')\n          );\n          const placeHolderStyle = {\n            label: { show: false },\n            labelLine: { show: false },\n            color: 'rgba(0, 0, 0, 0)',\n            borderColor: 'rgba(0, 0, 0, 0)',\n            borderWidth: 0\n          };\n\n          const pieData = [];\n          for (let i = 0; i < salaryData.length; i++) {\n            pieData.push({\n              data: salaryData[i].averageSalary.toFixed(0),\n              value: 20,\n              name: salaryData[i].industry,\n              itemStyle: {\n                color: colors[i % colors.length],\n                borderWidth: 20,\n                borderColor: borderColors[i % borderColors.length]\n              }\n            }, {\n              value: 8,\n              name: '',\n              itemStyle: placeHolderStyle\n            });\n          }\n          pieData.push({ value: 40, name: '', itemStyle: placeHolderStyle });\n\n          const totalAvg = (\n              salaryData.reduce((sum, cur) => sum + cur.averageSalary, 0) / salaryData.length\n          ).toFixed(0);\n\n          const option = {\n            backgroundColor: '#fff',\n            tooltip: { show: false },\n            legend: { show: false },\n            toolbox: { show: false },\n            series: [\n              {\n                type: 'pie',\n                clockwise: false,\n                radius: [100, 200],\n                emphasis: {\n                  scale: false,\n                  label: {\n                    show: true,\n                    position: 'inner',\n                    color: '#333',\n                    fontSize: 14\n                  }\n                },\n                startAngle: -30,\n                label: {\n                  show: true,\n                  position: 'inner',\n                  color: '#333',\n                  fontSize: 14,\n                  formatter: function (params) {\n                    const isChinese = /[\\u4e00-\\u9fa5]/.test(params.name);\n                    if (params.name !== '') {\n                      if (isChinese && params.name.length > 4) {\n                        return params.name.slice(0, 3) + '\\n' + params.name.slice(3);\n                      } else {\n                        return params.name;\n                      }\n                    } else {\n                      return '';\n                    }\n                  }\n                },\n                labelLine: {\n                  length: 25,\n                  length2: 40,\n                  show: true\n                },\n                itemStyle: {\n                  color: colors[0],\n                  borderWidth: 20,\n                  borderColor: borderColors[0]\n                },\n                data: pieData\n              },\n              {\n                type: 'pie',\n                clockwise: false,\n                radius: [100, 200],\n                silent: false,\n                startAngle: -30,\n                label: {\n                  show: true,\n                  position: 'outside',\n                  fontSize: 16,\n                  formatter: function (params) {\n                    return params.name !== '' ? params.data.data + ' 元' : '';\n                  }\n                },\n                labelLine: {\n                  length: 30,\n                  length2: 60,\n                  show: true\n                },\n                itemStyle: {\n                  color: colors[0],\n                  borderWidth: 20,\n                  borderColor: borderColors[0]\n                },\n                data: pieData\n              }\n            ],\n            graphic: [\n              {\n                type: 'group',\n                left: 'center',\n                top: 'middle',\n                children: [\n                  {\n                    type: 'text',\n                    z: 100,\n                    left: 'center',\n                    top: '0',\n                    style: {\n                      fill: '#333',\n                      text: ['行业平均薪资'],\n                      font: '16px Microsoft YaHei'\n                    }\n                  },\n                  {\n                    type: 'text',\n                    z: 100,\n                    left: 'center',\n                    top: '32',\n                    style: {\n                      fill: 'red',\n                      text: [totalAvg + ' 元'],\n                      font: '26px Microsoft YaHei'\n                    }\n                  }\n                ]\n              }\n            ]\n          };\n\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          myChart.setOption(option);\n\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    }\n\n\n\n\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SalaryAnalysis.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SalaryAnalysis.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SalaryAnalysis.vue?vue&type=template&id=71ada919\"\nimport script from \"./SalaryAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./SalaryAnalysis.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","staticStyle","_v","attrs","name","data","created","getIndustrySalaryCategoryCount","getIndustryAverageSalary","methods","$request","get","then","res","code","chartDom","document","getElementById","myChart","echarts","rawData","salaryCategories","industryMap","forEach","item","industry","salaryCategory","count","series","Object","keys","map","type","cat","option","title","text","tooltip","trigger","legend","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","xAxis","yAxis","setOption","$message","error","message","salaryData","colors","borderColors","c","replace","placeHolderStyle","label","labelLine","color","borderColor","borderWidth","pieData","i","length","push","averageSalary","toFixed","value","itemStyle","totalAvg","reduce","sum","cur","backgroundColor","clockwise","radius","emphasis","scale","position","fontSize","startAngle","formatter","params","isChinese","test","slice","length2","silent","graphic","left","top","children","z","style","fill","font","component"],"sourceRoot":""}