{"version":3,"file":"js/337.6ea43350.js","mappings":"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","sources":["webpack://vue/./src/views/manager/IndustryAnalysis.vue","webpack://vue/src/views/manager/IndustryAnalysis.vue","webpack://vue/./src/views/manager/IndustryAnalysis.vue?4e80","webpack://vue/./src/views/manager/IndustryAnalysis.vue?69bd"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"24px\",\"font-weight\":\"bold\",\"margin-bottom\":\"10px\",\"color\":\"#2c334c\"}},[_vm._v(\"行业分析\")]),_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"18px\",\"font-weight\":\"bold\",\"color\":\"#2c334c\"}},[_vm._v(\"行业岗位分布图\")]),_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"450px\",\"flex\":\"1\"},attrs:{\"id\":\"bar\"}})]),_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"18px\",\"font-weight\":\"bold\",\"color\":\"#2c334c\"}},[_vm._v(\"行业薪资分布图\")]),_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"500px\",\"flex\":\"1\"},attrs:{\"id\":\"pie\"}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n\n    <div style=\"font-size: 24px; font-weight: bold; margin-bottom: 10px; color: #2c334c\" class=\"card\">行业分析</div>\n    <div style=\"font-size: 18px; font-weight: bold; color: #2c334c\" class=\"card\">行业岗位分布图</div>\n      <div style=\"display: flex\">\n        <div id=\"bar\" style=\"height: 450px; flex: 1\" class=\"card\"></div>\n      </div>\n    <div style=\"font-size: 18px; font-weight: bold; color: #2c334c\" class=\"card\">行业薪资分布图</div>\n    <div style=\"display:flex\">\n        <div id=\"pie\" style=\"height: 500px; flex: 1\" class=\"card\"></div>\n     </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'IndustryAnalysis',\n  data() {\n    return {\n\n    }\n  },\n  created() {\n    this.getIndustryCount();\n    this.getJobTypeMaxSalary();\n  },\n  methods:{\n    // 行业count\n    getIndustryCount() {\n      this.$request.get('/jobData/industryCount').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n\n          const rawData = res.data;\n          const data = rawData.map(item => item.count);\n          const timeData = rawData.map(item => item.industry);\n          let key = 0;\n          let colorList = ['#73DDFF', '#73ACFF', '#FDD56A', '#FDB36A', '#FD866A', '#9E87FF', '#00FFFF','#CD5C5C','#F08080'];\n\n          let option = {\n            tooltip: {\n                show: true\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: true,\n                min: -1,\n                max: 9,\n                axisLine: {\n                    show:false,\n                    lineStyle: {\n                        color: '#4bbbf8',\n                        shadowColor: 'rgba(75, 211, 255, 0.5)',\n                        shadowBlur: 5\n                    }\n                },\n                axisTick: {\n                    show:false,\n                    interval: (index) => {\n                        if (index === -1 || index === 9) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                },\n                axisLabel: {\n                    color: '#fff',\n                    fontSize: 12\n                },\n                splitLine: {\n                    show: false\n                },\n                data: timeData\n            },\n            yAxis: [{\n                max: Math.max(...data) + 100,\n                min: 0,\n                show:false,\n                axisLine: {\n                    show:false,\n                    lineStyle: {\n                        color: '#4bbbf8',\n                        shadowColor: 'rgba(75, 211, 255, 0.5)',\n                        shadowBlur: 5\n                    }\n                },\n                axisLabel: {\n                    color: '#fff',\n                    fontSize: 12\n                },\n                splitLine: {\n                    show:false,\n                    lineStyle: {\n                        color: 'rgba(75, 211, 255, 0.2)',\n                        type: 'dashed'\n                    }\n                }\n            }],\n            series: [{\n                // name: '岗位',\n              type: 'bar',\n              barCategoryGap: '20%',\n              center: ['50%', '50%'],\n              label: {\n                    show: true,\n                    position: 'top',\n                    color: '#1798ff',\n                    fontSize: 14\n                },\n                itemStyle: {\n                  barBorderRadius: [30, 30, 0, 0],\n                    color: function(params){\n                        return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: colorList[params.dataIndex % colorList.length]\n                        }, {\n                            offset: 1,\n                            color: colorList[params.dataIndex % colorList.length] + '00'\n                        }], false)\n                    }\n                },\n                data: data\n            }]\n          };\n\n          myChart.setOption(option);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    // 行业 平均薪资\n    getJobTypeMaxSalary() {\n      this.$request.get('/jobData/maxSalary').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n\n          const rawData = res.data;\n          const pieData = rawData.map(item => ({ value: item.maxSalary, name: item.type }));\n\n          let option = {\n            tooltip: {\n              trigger: 'item',\n              show: true,\n              formatter: function(params) {\n                return `${params.name}<br/>最高薪资: ${params.value}`;\n              }\n            },\n            legend: {\n              right: 'right',\n              bottom: '100px',\n\n            },\n            toolbox: {\n              show: true,\n              feature: {\n                mark: { show: true },\n                dataView: { show: true, readOnly: false },\n                restore: { show: true },\n                saveAsImage: { show: true }\n              }\n            },\n            series: [\n              {\n                name: 'Nightingale Chart',\n                type: 'pie',\n                radius: [50, 200],\n                center: ['50%', '50%'],\n                roseType: 'area',\n                itemStyle: {\n                  borderRadius: 8\n                },\n                data: pieData\n              }\n            ]\n          };\n\n          myChart.setOption(option);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n\n\n\n\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IndustryAnalysis.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IndustryAnalysis.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./IndustryAnalysis.vue?vue&type=template&id=5a738d2e\"\nimport script from \"./IndustryAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./IndustryAnalysis.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","staticStyle","_v","attrs","name","data","created","getIndustryCount","getJobTypeMaxSalary","methods","$request","get","then","res","code","chartDom","document","getElementById","myChart","echarts","rawData","map","item","count","timeData","industry","colorList","option","tooltip","show","xAxis","type","boundaryGap","min","max","axisLine","lineStyle","color","shadowColor","shadowBlur","axisTick","interval","index","axisLabel","fontSize","splitLine","yAxis","Math","series","barCategoryGap","center","label","position","itemStyle","barBorderRadius","params","offset","dataIndex","length","setOption","$message","error","message","pieData","value","maxSalary","trigger","formatter","legend","right","bottom","toolbox","feature","mark","dataView","readOnly","restore","saveAsImage","radius","roseType","borderRadius","component"],"sourceRoot":""}