{"version":3,"file":"js/118.42a5ed4d.js","mappings":"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","sources":["webpack://vue/./src/views/manager/CityAnalysis.vue","webpack://vue/src/views/manager/CityAnalysis.vue","webpack://vue/./src/views/manager/CityAnalysis.vue?1efb","webpack://vue/./src/views/manager/CityAnalysis.vue?d1ad"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"24px\",\"font-weight\":\"bold\",\"margin-bottom\":\"10px\",\"color\":\"#2c334c\"}},[_vm._v(\"城市分析\")]),_c('div',{staticClass:\"card\",staticStyle:{\"font-size\":\"18px\",\"font-weight\":\"bold\",\"color\":\"#2c334c\"}},[_c('el-select',{attrs:{\"placeholder\":\"Select\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._m(0)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"display\":\"flex\",\"padding-top\":\"10px\"}},[_c('div',{staticStyle:{\"flex\":\"1\",\"padding-right\":\"10px\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"450px\"},attrs:{\"id\":\"line\"}})]),_c('div',{staticStyle:{\"flex\":\"1\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"height\":\"450px\"},attrs:{\"id\":\"pie\"}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n\n    <div style=\"font-size: 24px; font-weight: bold; margin-bottom: 10px; color: #2c334c\" class=\"card\">城市分析</div>\n    <div style=\"font-size: 18px; font-weight: bold; color: #2c334c\" class=\"card\">\n      <el-select v-model=\"value\" placeholder=\"Select\">\n        <el-option\n          v-for=\"item in options\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\">\n        </el-option>\n      </el-select>\n    </div>\n    <div style=\"display: flex; padding-top: 10px\">\n      <div style=\"flex: 1; padding-right: 10px\">\n        <div id=\"line\" style=\"height: 450px\" class=\"card\"></div>\n      </div>\n      <div style=\"flex: 1;\">\n        <div id=\"pie\" style=\"height: 450px\" class=\"card\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'CityAnalysis',\n  data() {\n    return {\n      // 下拉框的值\n      options: [],\n      value: '',\n    }\n  },\n  created() {\n    this.getCitySalaryCategoryCount();\n    this.getCompanyPeopleCategory();\n  },\n  methods:{\n    // 薪资区间count\n    getCitySalaryCategoryCount() {\n      this.$request.get('/jobData/citySalary').then(res => {\n        if (res.code === '200') {\n          const data = res.data;\n\n          // 获取所有城市\n          const allCities = [...new Set(data.map(item => item.city))];\n          // 设置下拉框的选项\n          this.options = allCities.map(city => ({ value: city, label: city }));\n\n          const selectedCity = this.value || allCities[0];\n          const filteredData = data.filter(item => item.city === selectedCity);\n\n          const categories = [...new Set(filteredData.map(item => item.salaryCategory))].sort((a, b) => {\n            const getLow = s => s.includes('以上') ? Infinity : parseInt(s.split('-')[0], 10);\n            return getLow(a) - getLow(b);\n          });\n\n          const cityData = categories.map(cat => {\n            const found = filteredData.find(item => item.salaryCategory === cat);\n            return found ? found.count : 0;\n          });\n          const series = [{\n            name: selectedCity,\n            type: 'line',\n            stack: 'Total',\n            smooth: true,\n            lineStyle: { width: 0 },\n            showSymbol: false,\n            areaStyle: {\n              opacity: 0.8,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: 'rgb(0, 221, 255)' },\n                { offset: 1, color: 'rgb(77, 119, 255)' }\n              ])\n            },\n            emphasis: { focus: 'series' },\n            data: cityData\n          }];\n\n          const option = {\n            color: ['#00DDFF'],\n            title: { text: '城市薪资区间分布图' },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: { backgroundColor: '#6a7985' }\n              }\n            },\n            legend: { data: [selectedCity] },\n            toolbox: {\n              feature: { saveAsImage: {} }\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [\n              {\n                type: 'category',\n                boundaryGap: false,\n                data: categories\n              }\n            ],\n            yAxis: [\n              {\n                type: 'value'\n              }\n            ],\n            series\n          };\n\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          myChart.setOption(option);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    // 公司规模\n    getCompanyPeopleCategory() {\n      this.$request.get('/jobData/companyPeopleCategory').then(res => {\n        if (res.code === '200') {\n          const data = res.data;\n\n          // 获取所有城市\n          const allCities = [...new Set(data.map(item => item.city))];\n          // 设置下拉框的选项\n          this.options = allCities.map(city => ({ value: city, label: city }));\n\n          // 默认选择第一个城市\n          const selectedCity = this.value || allCities[0];\n          this.value = selectedCity;\n\n          // 渲染饼图\n          this.renderPieChart(selectedCity, data);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    renderPieChart(selectedCity, data) {\n      // 筛选选中城市的数据\n      const filteredData = data.filter(item => item.city === selectedCity);\n\n      // 转换为饼图需要的格式\n      const pieData = filteredData.map(item => ({\n        name: item.companyPeople,\n        value: item.count\n      }));\n\n      // 配置饼图\n      const option = {\n        title: { text: '公司规模区间分布图' },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          bottom: '5%',\n          left: 'center'\n        },\n        series: [\n          {\n            name: '公司人数分布',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 40,\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: pieData\n          }\n        ]\n      };\n\n      // 渲染饼图\n      let chartDom = document.getElementById('pie');\n      let myChart = echarts.init(chartDom);\n      myChart.setOption(option);\n    }\n\n\n\n\n  },\n  watch: {\n    value() {\n      this.getCitySalaryCategoryCount();\n      this.getCompanyPeopleCategory();\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CityAnalysis.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CityAnalysis.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CityAnalysis.vue?vue&type=template&id=721e6c75\"\nimport script from \"./CityAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./CityAnalysis.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","_v","attrs","model","value","callback","$$v","expression","_l","options","item","key","label","_m","staticRenderFns","name","data","created","getCitySalaryCategoryCount","getCompanyPeopleCategory","methods","$request","get","then","res","code","allCities","Set","map","city","selectedCity","filteredData","filter","categories","salaryCategory","sort","a","b","getLow","s","includes","Infinity","parseInt","split","cityData","cat","found","find","count","series","type","stack","smooth","lineStyle","width","showSymbol","areaStyle","opacity","color","echarts","offset","emphasis","focus","option","title","text","tooltip","trigger","axisPointer","backgroundColor","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","chartDom","document","getElementById","myChart","setOption","$message","error","message","renderPieChart","pieData","companyPeople","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","show","position","fontSize","fontWeight","labelLine","watch","component"],"sourceRoot":""}